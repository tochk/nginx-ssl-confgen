// Code generated by qtc from "config-http.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line config-http.qtpl:1
package templates

//line config-http.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line config-http.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line config-http.qtpl:1
func StreamHttpConfig(qw422016 *qt422016.Writer, config NginxConfig) {
//line config-http.qtpl:1
	qw422016.N().S(`
server {
        listen 80;
        listen [::]:80;
        server_name `)
//line config-http.qtpl:5
	for _, e := range config.ServerNames {
//line config-http.qtpl:5
		qw422016.N().S(e)
//line config-http.qtpl:5
		qw422016.N().S(` `)
//line config-http.qtpl:5
	}
//line config-http.qtpl:5
	qw422016.N().S(`;
        location / {
            root /tmp/nginx-confgen/`)
//line config-http.qtpl:7
	qw422016.N().S(config.ServerNames[0])
//line config-http.qtpl:7
	qw422016.N().S(`/;
        }
}
`)
//line config-http.qtpl:10
}

//line config-http.qtpl:10
func WriteHttpConfig(qq422016 qtio422016.Writer, config NginxConfig) {
//line config-http.qtpl:10
	qw422016 := qt422016.AcquireWriter(qq422016)
//line config-http.qtpl:10
	StreamHttpConfig(qw422016, config)
//line config-http.qtpl:10
	qt422016.ReleaseWriter(qw422016)
//line config-http.qtpl:10
}

//line config-http.qtpl:10
func HttpConfig(config NginxConfig) string {
//line config-http.qtpl:10
	qb422016 := qt422016.AcquireByteBuffer()
//line config-http.qtpl:10
	WriteHttpConfig(qb422016, config)
//line config-http.qtpl:10
	qs422016 := string(qb422016.B)
//line config-http.qtpl:10
	qt422016.ReleaseByteBuffer(qb422016)
//line config-http.qtpl:10
	return qs422016
//line config-http.qtpl:10
}
